name: Test .NET Version

on:
  workflow_dispatch:

jobs:
  test-dotnet-version:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up .NET 10.0.x
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 10.0.x

      - name: Verify .NET 10.0.x Installation
        run: dotnet --version

      - name: Display .NET Info
        run: dotnet --info

      - name: List installed .NET SDKs
        run: dotnet --list-sdks

      - name: List installed .NET runtimes
        run: dotnet --list-runtimes

      - name: Check MSBuild (Visual Studio msbuild.exe) on PATH
        shell: pwsh
        run: |
          if (Get-Command msbuild -ErrorAction SilentlyContinue) {
            Write-Host "MSBuild is installed (msbuild on PATH):"
            # msbuild has a -version argument on most Visual Studio/MSBuild installs
            try {
              msbuild -version
            } catch {
              Write-Host "msbuild -version failed, printing msbuild help instead:"
              msbuild -help
            }
            Write-Host "MSBuild path(s):"
            Get-Command msbuild | Select-Object -ExpandProperty Source
          } else {
            Write-Host "msbuild executable not found on PATH."
          }

      - name: Check dotnet-provided MSBuild
        shell: pwsh
        run: |
          if (Get-Command dotnet -ErrorAction SilentlyContinue) {
            Write-Host "MSBuild info from 'dotnet --info':"
            dotnet --info | Select-String -Pattern "MSBuild"
            Write-Host "`nAttempt to run 'dotnet msbuild -version' (may not be supported on all SDKs):"
            try {
              dotnet msbuild -version
            } catch {
              Write-Host "dotnet msbuild -version failed or is not supported on this runner."
            }
          } else {
            Write-Host "dotnet not found."
          }

      - name: Create and test a simple console application
        run: |
          dotnet new console -n TestApp --force
          cd TestApp
          dotnet run
